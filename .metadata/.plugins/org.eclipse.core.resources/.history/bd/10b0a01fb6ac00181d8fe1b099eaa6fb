package week01;

/**
 * 
 * @author bvail
 *
 * @param <T> Generic Type
 */
public class GenericStack2<T> extends java.util.ArrayList<T> {
	
		
//		private java.util.ArrayList<E> list = new java.util.ArrayList<>();
		
		/**
		 * gets the size of the list/itself
		 * @return Returns the size/length
		 */
		public int getSize() {
			return this.size();
			
		}
		
		/**
		 * peeks the next index value
		 * @return returns the next index value
		 */
		public T peek() {
			return this.get(getSize() -1);
		}
		
		/**
		 * pushes to the top of the stack
		 * @param o is generic
		 */
		public void push(T o) {
			this.add(o);
		}
		
		/**
		 * pops the top & returns it
		 * @return returns the popped object
		 */
		public T pop() {
			T o = this.get(getSize()-1);
			this.remove(getSize()-1);
			return o;
		}
		
		/**
		 * boolean empty
		 * @return boolean
		 */
		public boolean isEmpty() {
			return this.isEmpty();

			
		}
		
		/**
		 * toString default implementing super.toString()
		 * returns "stack: "+ super.toString()
		 */
		@Override
		public String toString() {
			return "stack: "+ super.toString();
			
		}
}
